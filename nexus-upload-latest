#!/bin/bash
# ********************************************************************
# Name    : nexus_upload.sh
# Date    : 03-May-2019
# Author  : zrddkpp
# Purpose : This script will upload artifacts to "arm104" nexus to with "assure-releases" repo id by user nmiteam and with encrypted password
# Usage   : nexus_upload.sh <RSTATE> </PATH/FILE_NAME>
# ********************************************************************

M2_HOME=~/.m2
MVN_PATH=/usr/bin/mvn
USER_NAME=nmiteam
NEXUS_URL=https://arm104-eiffel004.lmera.ericsson.se:8443/nexus/content/repositories/assure-releases/
NEXUS_REPO_ID=assure-releases
ARTIFACT_GROUP_ID=com.ericsson.eniq.stats.nmi
ARTIFACT_VERSION=$1
LOGPATH=/tmp/nexus_upload_log/$0_log
LOG_FILE=$LOGPATH/$(date +%F).$ARTIFACT_ID.log
LINK_PATH=com/ericsson/eniq/stats/nmi/$2
UEP={5D3lAgKYiHgHcZ51FFhETCFvPlIatXrcRHHGkHPYHA8=}
MEP={3g2ExFC9KWYH8iAXowQZQOdUBL7loY90Zz4ROmh9Zhw=}

logger -t INFO $0 script started to upload $FILE_NAME to nexus

# ********************************************************************
#Validating arguments/inputs &  exit with Usage message
#else it will create dir. to save log and copy checksum of file to log file
#  ********************************************************************

if [[ $# -ne 3 || ! -f $3 ]] ;
  then
    logger -st INFO "Usage: $0 RSTATE SHIPMENT /PATH/FILE_NAME"
    logger -t EXIT $0 script exited with Usage message
    exit 100
  else
    FILE_NAME=$(basename $3)
    ARTIFACT_ID=${FILE_NAME%%.*}
    LOG_FILE=$LOGPATH/$(date +%F).$ARTIFACT_ID.log
    CHECKSUM_LOG_FILE=$LOGPATH/$(date +%F).$ARTIFACT_ID.checksum
    mkdir -p $LOGPATH
    md5sum $FILE_NAME > $CHECKSUM_LOG_FILE
fi

### Function: insert_before_servers ###
#
# It will insert username info in setting.xml b/w </servers> section
#
# Arguments     : None
# Return Values : None
#

insert_before_servers () {
logger -t INFO $USER_NAME not found in $M2_HOME/settings.xml file
sed -i "/<servers>/a     <server>\n    <id>assure-releases<\/id>\n    <username>$USER_NAME<\/username>\n    <password>$UEP<\/password>\n<\/server>" $M2_HOME/settings.xml
logger -t INFO $USER_NAME added to $M2_HOME/settings.xml file
}

### Function: insert_before_settings ###
#
# It will insert username info in setting.xml b/w </settings> section
#
# Arguments     : None
# Return Values : None
#

insert_before_settings () {
logger -t INFO $USER_NAME not found in $M2_HOME/settings.xml file
sed -i "/<\/settings>/i   <servers>\n  <server>\n    <id>assure-releases<\/id>\n    <username>$USER_NAME<\/username>\n    <password>$UEP<\/password>\n  <\/server>\n<\/servers>" $M2_HOME/settings.xml
logger -t INFO $USER_NAME added to $M2_HOME/settings.xml file
}

### Function: setting_security_file ###
#
# creating settings.xml file and copying username and encrypted password
#
# Arguments     : None
# Return Values : None
#

setting_security_file () {
logger -t INFO $M2_HOME/settings-security.xml file  not found
cat <<EOF > $M2_HOME/settings-security.xml
<settingsSecurity>
  <master>${MEP}</master>
</settingsSecurity>
EOF
logger -t INFO $M2_HOME/settings-security.xml file created
}

### Function: setting_file ###
#
# creating settings-security.xml file and copying mastr encrypted password
#
# Arguments     : None
# Return Values : None
#

setting_file () {
logger -t INFO $M2_HOME/settings.xml file  not found
cat <<EOF > $M2_HOME/settings.xml
<?xml version="1.0"?>
<settings>
  <servers>
     <server>
        <id>assure-releases</id>
        <username>${USER_NAME}</username>
        <password>${UEP}</password>
    </server>
  </servers>
</settings>
EOF
logger -t INFO $M2_HOME/settings.xml file created
}

### Function: success ###
#
# creating settings-security.xml file and copying mastr encrypted password
#
# Arguments     : None
# Return Values : None
#

success () {
logger -st INFO  CHECKSUM OF $FILE_NAME IS `awk '{print $1}' $CHECKSUM_LOG_FILE` and saved in $CHECKSUM_LOG_FILE
sleep 2s
logger -st SUCCESS $FILE_NAME is successfully uploaded by $USER_NAME and nexus link is $NEXUS_URL$LINK_PATH/$ARTIFACT_ID/$ARTIFACT_VERSION/
logger  -st INFO you can check maven_log from $LOG_FILE
}

### Function: unsuccess ###
#
# creating settings-security.xml file and copying mastr encrypted password
#
# Arguments     : None
# Return Values : None
#

unsuccess () {
logger -st ERROR $FILE_NAME is Failed to upload and please check the log from $LOG_FILE and try again
}

### Function: maven_cmd ###
#
# creating settings-security.xml file and copying mastr encrypted password
#
# Arguments     : None
# Return Values : None
#

maven_cmd () {
logger -st INFO $FILE_NAME is uploading...
$MVN_PATH -B deploy:deploy-file -Durl=$NEXUS_URL -DrepositoryId=$NEXUS_REPO_ID -DgroupId=$ARTIFACT_GROUP_ID -Dversion=$ARTIFACT_VERSION -DartifactId=$ARTIFACT_ID  -Dfile=$FILE_NAME >> $LOG_FILE
}

#Excution: If 2 files or not exist then it will create and upload artifact to nexus and maven log will save to $LOGPATH
if [[ ! -f $M2_HOME/settings.xml || ! -f $M2_HOME/settings-security.xml ]];
  then
    setting_file
    setting_security_file
    maven_cmd
      if [ $? = 0 ] ;
        then
          success
        else
          unsuccess
      fi
#Excution: If $USER_NAME exist then will upload artifact to nexus and maven log will save to $LOGPATH
  elif grep -wq "$USER_NAME" $M2_HOME/settings.xml ;
    then
      setting_security_file
      maven_cmd
        if [ $? = 0 ] ;
          then
            success
          else
            unsuccess
        fi
#Excution: If </settings> and </servers>section exist the will append $USER_NAME to settings.xml file and it will upload artifact to nexus and maven log will save to $LOGPATH
  elif grep -wq settings $M2_HOME/settings.xml ;
    then
      if grep -wq servers $M2_HOME/settings.xml ;
        then
          insert_before_servers
          setting_security_file
          maven_cmd
            if [ $? =  0 ] ;
              then
                success
              else
                unsuccess
            fi
#Excution: If </settings> section exsit and </servers> not exist then will append </servers> section and $USER_NAME & will upload artifact to nexus and maven log will save to $LOGPATH
        else
          insert_before_settings
          setting_security_file
          maven_cmd
            if [ $? = 0 ] ;
              then
                success
              else
                unsuccess
            fi
      fi
#Excution: If both sections not exist then its consider settings.xml file is empty and append all sections with $USER_NAME & will upload artifact to nexus and maven log will save to $LOGPATH
    else
      setting_file
      setting_security_file
      maven_cmd
        if [ $? = 0 ] ;
          then
            success
          else
            unsuccess
        fi
fi
#END

